@model ProductTestWork.ViewModels.AllProductsViewModel
@using X.PagedList.Mvc.Core;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Products";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New Product</a>
</p>

@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", Model.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>                
                @Html.ActionLink("Product Id", "Index", new { sortOrder = Model.IdSortParm, currentFilter = Model.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Product Name", "Index", new { sortOrder = Model.NameSortParm, currentFilter = Model.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Product Category", "Index", new { sortOrder = Model.CategorySortParm, currentFilter = Model.CurrentFilter })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProductList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryType)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<br />
Page @(Model.ProductPagedList.PageCount < Model.ProductPagedList.PageNumber ? 0 : Model.ProductPagedList.PageNumber) of @Model.ProductPagedList.PageCount

@Html.PagedListPager(Model.ProductPagedList, page => Url.Action("Index",
    new { page, sortOrder = Model.CurrentSort, currentFilter = Model.CurrentFilter }))